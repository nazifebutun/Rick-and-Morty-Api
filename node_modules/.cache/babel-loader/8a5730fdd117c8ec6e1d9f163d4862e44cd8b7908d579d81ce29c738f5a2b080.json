{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazbt\\\\Desktop\\\\RickandMortyTable\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [allCharacters, setAllCharacters] = useState([]); // Tüm karakterler\n  const [currentPage, setCurrentPage] = useState(1); // Şu anki sayfa\n  const [loading, setLoading] = useState(true); // Yükleme durumu\n  const [error, setError] = useState(null); // Hata mesajı\n\n  const charactersPerPage = 9; // Her sayfada gösterilecek karakter sayısı\n\n  // Tüm karakterleri API'den çekme\n  useEffect(() => {\n    const fetchAllCharacters = async () => {\n      try {\n        setLoading(true);\n        let allCharactersTemp = [];\n        let page = 1;\n        let totalPages = 1;\n\n        // İlk sayfayı çek ve toplam sayfa sayısını öğren\n        const response = await axios.get(`https://rickandmortyapi.com/api/character?page=${page}`);\n        allCharactersTemp = response.data.results;\n        totalPages = response.data.info.pages;\n\n        // Kalan sayfaları çek\n        const fetchPromises = [];\n        for (let i = 2; i <= totalPages; i++) {\n          fetchPromises.push(axios.get(`https://rickandmortyapi.com/api/character?page=${i}`));\n        }\n        const results = await Promise.all(fetchPromises);\n        results.forEach(res => {\n          allCharactersTemp = [...allCharactersTemp, ...res.data.results];\n        });\n        setAllCharacters(allCharactersTemp); // Tüm karakterleri state'e kaydet\n        setError(null);\n      } catch (err) {\n        setError(\"Failed to fetch characters. Please try again.\");\n      } finally {\n        setLoading(false); // Yükleme durumunu kapat\n      }\n    };\n    fetchAllCharacters();\n  }, []);\n\n  // Şu anki sayfada gösterilecek karakterler\n  const indexOfLastCharacter = currentPage * charactersPerPage;\n  const indexOfFirstCharacter = indexOfLastCharacter - charactersPerPage;\n  const currentCharacters = allCharacters.slice(indexOfFirstCharacter, indexOfLastCharacter);\n\n  // Toplam sayfa sayısını hesaplama\n  const totalPages = Math.ceil(allCharacters.length / charactersPerPage);\n\n  // Sayfa değiştirici fonksiyonlar\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prev => prev + 1);\n    }\n  };\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prev => prev - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rick and Morty Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(3, 1fr)\",\n          gap: \"20px\"\n        },\n        children: currentCharacters.map(char => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ddd\",\n            borderRadius: \"8px\",\n            padding: \"10px\",\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: char.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", char.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Species: \", char.species]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: char.image,\n            alt: char.name,\n            style: {\n              width: \"100px\",\n              height: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)]\n        }, char.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousPage,\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Page \", currentPage, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPage,\n          disabled: currentPage === totalPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"PTgbLoNG2TxA++tICJy6ZXqwjI4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","allCharacters","setAllCharacters","currentPage","setCurrentPage","loading","setLoading","error","setError","charactersPerPage","fetchAllCharacters","allCharactersTemp","page","totalPages","response","get","data","results","info","pages","fetchPromises","i","push","Promise","all","forEach","res","err","indexOfLastCharacter","indexOfFirstCharacter","currentCharacters","slice","Math","ceil","length","handleNextPage","prev","handlePreviousPage","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","display","gridTemplateColumns","gap","map","char","border","borderRadius","padding","textAlign","name","status","species","src","image","alt","width","height","id","marginTop","justifyContent","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/nazbt/Desktop/RickandMortyTable/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n    const [allCharacters, setAllCharacters] = useState([]); // Tüm karakterler\r\n    const [currentPage, setCurrentPage] = useState(1); // Şu anki sayfa\r\n    const [loading, setLoading] = useState(true); // Yükleme durumu\r\n    const [error, setError] = useState(null); // Hata mesajı\r\n\r\n    const charactersPerPage = 9; // Her sayfada gösterilecek karakter sayısı\r\n\r\n    // Tüm karakterleri API'den çekme\r\n    useEffect(() => {\r\n        const fetchAllCharacters = async () => {\r\n            try {\r\n                setLoading(true);\r\n                let allCharactersTemp = [];\r\n                let page = 1;\r\n                let totalPages = 1;\r\n\r\n                // İlk sayfayı çek ve toplam sayfa sayısını öğren\r\n                const response = await axios.get(`https://rickandmortyapi.com/api/character?page=${page}`);\r\n                allCharactersTemp = response.data.results;\r\n                totalPages = response.data.info.pages;\r\n\r\n                // Kalan sayfaları çek\r\n                const fetchPromises = [];\r\n                for (let i = 2; i <= totalPages; i++) {\r\n                    fetchPromises.push(axios.get(`https://rickandmortyapi.com/api/character?page=${i}`));\r\n                }\r\n\r\n                const results = await Promise.all(fetchPromises);\r\n                results.forEach((res) => {\r\n                    allCharactersTemp = [...allCharactersTemp, ...res.data.results];\r\n                });\r\n\r\n                setAllCharacters(allCharactersTemp); // Tüm karakterleri state'e kaydet\r\n                setError(null);\r\n            } catch (err) {\r\n                setError(\"Failed to fetch characters. Please try again.\");\r\n            } finally {\r\n                setLoading(false); // Yükleme durumunu kapat\r\n            }\r\n        };\r\n\r\n        fetchAllCharacters();\r\n    }, []);\r\n\r\n    // Şu anki sayfada gösterilecek karakterler\r\n    const indexOfLastCharacter = currentPage * charactersPerPage;\r\n    const indexOfFirstCharacter = indexOfLastCharacter - charactersPerPage;\r\n    const currentCharacters = allCharacters.slice(indexOfFirstCharacter, indexOfLastCharacter);\r\n\r\n    // Toplam sayfa sayısını hesaplama\r\n    const totalPages = Math.ceil(allCharacters.length / charactersPerPage);\r\n\r\n    // Sayfa değiştirici fonksiyonlar\r\n    const handleNextPage = () => {\r\n        if (currentPage < totalPages) {\r\n            setCurrentPage((prev) => prev + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage((prev) => prev - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Rick and Morty Characters</h1>\r\n\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <>\r\n                    {/* Karakterler Tablosu */}\r\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(3, 1fr)\", gap: \"20px\" }}>\r\n                        {currentCharacters.map((char) => (\r\n                            <div\r\n                                key={char.id}\r\n                                style={{\r\n                                    border: \"1px solid #ddd\",\r\n                                    borderRadius: \"8px\",\r\n                                    padding: \"10px\",\r\n                                    textAlign: \"center\",\r\n                                }}\r\n                            >\r\n                                <h3>{char.name}</h3>\r\n                                <p>Status: {char.status}</p>\r\n                                <p>Species: {char.species}</p>\r\n                                <img src={char.image} alt={char.name} style={{ width: \"100px\", height: \"100px\" }} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* Sayfalama Kontrolleri */}\r\n                    <div style={{ marginTop: \"20px\", display: \"flex\", justifyContent: \"center\", gap: \"10px\" }}>\r\n                        <button onClick={handlePreviousPage} disabled={currentPage === 1}>\r\n                            Previous\r\n                        </button>\r\n                        <p>\r\n                            Page {currentPage} of {totalPages}\r\n                        </p>\r\n                        <button onClick={handleNextPage} disabled={currentPage === totalPages}>\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}