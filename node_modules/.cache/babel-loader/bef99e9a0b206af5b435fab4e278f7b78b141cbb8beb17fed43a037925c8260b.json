{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import Modal from\"./Modal\";import\"../styles/App.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const[allCharacters,setAllCharacters]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[selectedCharacter,setSelectedCharacter]=useState(null);const[filter,setFilter]=useState(\"\");const charactersPerPage=8;useEffect(()=>{const fetchAllCharacters=async()=>{try{setLoading(true);let allCharactersTemp=[];let page=1;let totalPages=1;const response=await axios.get(\"https://rickandmortyapi.com/api/character?page=\".concat(page));allCharactersTemp=response.data.results;totalPages=response.data.info.pages;const fetchPromises=[];for(let i=2;i<=totalPages;i++){fetchPromises.push(axios.get(\"https://rickandmortyapi.com/api/character?page=\".concat(i)));}const results=await Promise.all(fetchPromises);results.forEach(res=>{allCharactersTemp=[...allCharactersTemp,...res.data.results];});setAllCharacters(allCharactersTemp);setError(null);}catch(err){setError(\"Failed to fetch characters. Please try again.\");}finally{setLoading(false);}};fetchAllCharacters();},[]);const filteredCharacters=allCharacters.filter(char=>char.name.toLowerCase().includes(filter.toLowerCase())||char.status.toLowerCase().includes(filter.toLowerCase())||char.species.toLowerCase().includes(filter.toLowerCase()));const indexOfLastCharacter=currentPage*charactersPerPage;const indexOfFirstCharacter=indexOfLastCharacter-charactersPerPage;const currentCharacters=filteredCharacters.slice(indexOfFirstCharacter,indexOfLastCharacter);const totalPages=Math.ceil(filteredCharacters.length/charactersPerPage);const handleNextPage=()=>{if(currentPage<totalPages){setCurrentPage(prev=>prev+1);}};const handlePreviousPage=()=>{if(currentPage>1){setCurrentPage(prev=>prev-1);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Rick and Morty\",/*#__PURE__*/_jsx(\"br\",{}),\"Characters\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Filter by name or status or species\",value:filter,onChange:e=>{setFilter(e.target.value);setCurrentPage(1);// Filtreleme sonrası sayfayı sıfırlıyoruz\n},className:\"filter-input\"})}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),loading?/*#__PURE__*/_jsx(\"p\",{className:\"loading-text\",children:\"Loading...\"}):currentCharacters.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"character-grid\",children:currentCharacters.map(char=>/*#__PURE__*/_jsxs(\"div\",{className:\"character-card\",onClick:()=>setSelectedCharacter(char),children:[/*#__PURE__*/_jsx(\"h3\",{className:\"custom-heading\",children:char.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"character-status\",children:[\"Status: \",char.status]}),/*#__PURE__*/_jsxs(\"p\",{className:\"character-species\",children:[\"Species: \",char.species]}),/*#__PURE__*/_jsx(\"img\",{src:char.image,alt:char.name,className:\"character-image\"})]},char.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(1),disabled:currentPage===1,className:\"pagination-button\",children:\"<<\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePreviousPage,disabled:currentPage===1,className:\"pagination-button\",children:\"<\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"pagination-info\",children:[\"Page \",currentPage,\" of \",totalPages]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextPage,disabled:currentPage===totalPages,className:\"pagination-button\",children:\">\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(totalPages),disabled:currentPage===totalPages,className:\"pagination-button\",children:\">>\"})]})]}):/*#__PURE__*/_jsx(\"p\",{className:\"no-characters\",children:\"No characters found.\"}),/*#__PURE__*/_jsx(Modal,{character:selectedCharacter,onClose:()=>setSelectedCharacter(null)})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","allCharacters","setAllCharacters","currentPage","setCurrentPage","loading","setLoading","error","setError","selectedCharacter","setSelectedCharacter","filter","setFilter","charactersPerPage","fetchAllCharacters","allCharactersTemp","page","totalPages","response","get","concat","data","results","info","pages","fetchPromises","i","push","Promise","all","forEach","res","err","filteredCharacters","char","name","toLowerCase","includes","status","species","indexOfLastCharacter","indexOfFirstCharacter","currentCharacters","slice","Math","ceil","length","handleNextPage","prev","handlePreviousPage","children","className","type","placeholder","value","onChange","e","target","map","onClick","src","image","alt","id","disabled","character","onClose"],"sources":["C:/Users/nazbt/Desktop/RickandMortyTable/Rick-and-Morty-Api/src/components/app.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"./Modal\"; \r\nimport \"../styles/App.css\";\r\n\r\nconst App = () => {\r\n    const [allCharacters, setAllCharacters] = useState([]); \r\n    const [currentPage, setCurrentPage] = useState(1); \r\n    const [loading, setLoading] = useState(true); \r\n    const [error, setError] = useState(null); \r\n    const [selectedCharacter, setSelectedCharacter] = useState(null); \r\n    const [filter, setFilter] = useState(\"\"); \r\n\r\n    const charactersPerPage = 8; \r\n\r\n    useEffect(() => {\r\n        const fetchAllCharacters = async () => {\r\n            try {\r\n                setLoading(true);\r\n                let allCharactersTemp = [];\r\n                let page = 1;\r\n                let totalPages = 1;\r\n\r\n                const response = await axios.get(`https://rickandmortyapi.com/api/character?page=${page}`);\r\n                allCharactersTemp = response.data.results;\r\n                totalPages = response.data.info.pages;\r\n\r\n                const fetchPromises = [];\r\n                for (let i = 2; i <= totalPages; i++) {\r\n                    fetchPromises.push(axios.get(`https://rickandmortyapi.com/api/character?page=${i}`));\r\n                }\r\n\r\n                const results = await Promise.all(fetchPromises);\r\n                results.forEach((res) => {\r\n                    allCharactersTemp = [...allCharactersTemp, ...res.data.results];\r\n                });\r\n\r\n                setAllCharacters(allCharactersTemp); \r\n                setError(null);\r\n            } catch (err) {\r\n                setError(\"Failed to fetch characters. Please try again.\");\r\n            } finally {\r\n                setLoading(false); \r\n            }\r\n        };\r\n\r\n        fetchAllCharacters();\r\n    }, []);\r\n\r\n    const filteredCharacters = allCharacters.filter((char) =>\r\n        char.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        char.status.toLowerCase().includes(filter.toLowerCase()) ||\r\n        char.species.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n\r\n    const indexOfLastCharacter = currentPage * charactersPerPage;\r\n    const indexOfFirstCharacter = indexOfLastCharacter - charactersPerPage;\r\n    const currentCharacters = filteredCharacters.slice(indexOfFirstCharacter, indexOfLastCharacter);\r\n\r\n    const totalPages = Math.ceil(filteredCharacters.length / charactersPerPage);\r\n\r\n    const handleNextPage = () => {\r\n        if (currentPage < totalPages) {\r\n            setCurrentPage((prev) => prev + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage((prev) => prev - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Rick and Morty<br />Characters</h1>\r\n\r\n            <div className=\"filter-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Filter by name or status or species\"\r\n                    value={filter}\r\n                    onChange={(e) => {\r\n                        setFilter(e.target.value);\r\n                        setCurrentPage(1); // Filtreleme sonrası sayfayı sıfırlıyoruz\r\n                    }}\r\n                    className=\"filter-input\"\r\n                />\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {loading ? (\r\n                <p className=\"loading-text\">Loading...</p>\r\n            ) : currentCharacters.length > 0 ? (\r\n                <>\r\n                    <div className=\"character-grid\">\r\n                        {currentCharacters.map((char) => (\r\n                            <div\r\n                                key={char.id}\r\n                                className=\"character-card\"\r\n                                onClick={() => setSelectedCharacter(char)}\r\n                            >\r\n                                <h3 className=\"custom-heading\">{char.name}</h3>\r\n                                <p className=\"character-status\">Status: {char.status}</p>\r\n                                <p className=\"character-species\">Species: {char.species}</p>\r\n                                <img src={char.image} alt={char.name} className=\"character-image\" />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"pagination-container\">\r\n                        <button\r\n                            onClick={() => setCurrentPage(1)}\r\n                            disabled={currentPage === 1}\r\n                            className=\"pagination-button\"\r\n                        >\r\n                            &lt;&lt;\r\n                        </button>\r\n                        <button\r\n                            onClick={handlePreviousPage}\r\n                            disabled={currentPage === 1}\r\n                            className=\"pagination-button\"\r\n                        >\r\n                            &lt;\r\n                        </button>\r\n                        <p className=\"pagination-info\">\r\n                            Page {currentPage} of {totalPages}\r\n                        </p>\r\n                        <button\r\n                            onClick={handleNextPage}\r\n                            disabled={currentPage === totalPages}\r\n                            className=\"pagination-button\"\r\n                        >\r\n                            &gt;\r\n                        </button>\r\n                        <button\r\n                            onClick={() => setCurrentPage(totalPages)}\r\n                            disabled={currentPage === totalPages}\r\n                            className=\"pagination-button\"\r\n                        >\r\n                            &gt;&gt;\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <p className=\"no-characters\">No characters found.</p>\r\n            )}\r\n\r\n            <Modal character={selectedCharacter} onClose={() => setSelectedCharacter(null)} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}